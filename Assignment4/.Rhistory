q()
setwd("C:/Users/Emma/Desktop/Spring2023/GEOG215/InClass/exercise19")
#### Load libraries
library(tidyverse)
library(sf)
library(spdep)
library(tmap)
#### Options
## Turn off scientific notation
options(scipen = 999)
# Read in shapefile
nc_cty <- read_sf("/NCDOT_County_Boundaries/NCDOT_County_Boundaries.shp")%>%
st_transform(4326)
# Read in shapefile
nc_cty <- read_sf("exercise19/NCDOT_County_Boundaries/NCDOT_County_Boundaries.shp")%>%
st_transform(4326)
# Read in shapefile
nc_cty <- read_sf("exercise19/NCDOT_County_Boundaries.shp")%>%
st_transform(4326)
setwd("C:/Users/Emma/Desktop/Spring2023/GEOG215/InClass/exercise19")
# Read in shapefile
nc_cty <- read_sf("exercise19/NCDOT_County_Boundaries/NCDOT_County_Boundaries.shp")%>%
st_transform(4326)
# Read in shapefile
nc_cty <- read_sf("NCDOT_County_Boundaries/NCDOT_County_Boundaries.shp")%>%
st_transform(4326)
st_geometry(nc_cty)
# Make quick map
tm_shape(nc_cty) +
tm_borders()
# Create neighborhood object
nc_cty_rook_nb <- poly2nb(nc_cty,
queen = FALSE)
# Print summary to screen
nc_cty_rook_nb
## View histogram of NUMBER of neighbors
ggplot() +
aes(card(nc_cty_rook_nb)) +
geom_histogram(bins = 8,
fill = "grey",
col = "grey40")
# First, the polygons
plot(st_geometry(nc_cty),
col = "gray85",
border = "gray75")
# Get coordinates of polygon centers
# Note warnings are okay!!
# Note that object is created!!
nc_cty_centroids <- st_centroid(nc_cty)
# Add the connections to the plot
plot(nc_cty_rook_nb,
st_geometry(nc_cty_centroids),
pch = 16,
col = "red",
lwd = 1,
add = TRUE)  # this overlays new layer on current plot
# Create neighborhood object
nc_cty_queen_nb <- poly2nb(nc_cty,
queen = TRUE)
# Print summary to screen
nc_cty_queen_nb
## View histogram of NUMBER of neighbors
ggplot() +
aes(card(nc_cty_queen_nb)) +
geom_histogram(bins = 8,
fill = "grey",
col = "grey40")
# First, the polygons
plot(st_geometry(nc_cty),
col = "gray85",
border = "gray75")
# Add the connections to the plot
plot(nc_cty_rook_q,
st_geometry(nc_cty_centroids),
pch = 16,
col = "red",
lwd = 1,
add = TRUE)  # this overlays new layer on current plot
# Add the connections to the plot
plot(nc_cty_rook_nb,
st_geometry(nc_cty_centroids),
pch = 16,
col = "red",
lwd = 1,
add = TRUE)  # this overlays new layer on current plot
# Add the connections to the plot
plot(nc_cty_queen_nb,
st_geometry(nc_cty_centroids),
pch = 16,
col = "red",
lwd = 1,
add = TRUE)  # this overlays new layer on current plot
# Identify nearest neighbor
## Note: warning is okay!
nc_cty_nn <- knn2nb(knearneigh(nc_cty_centroids,
longlat = TRUE))
# Get maximum distance to nearest neighbor
ct.dist <- nbdists(nc_cty_nn,
st_coordinates(nc_cty_centroids),
longlat = TRUE) %>%
unlist() %>%
max()
# Create neighborhood object using maximum distance
nc_cty_dist <- dnearneigh(st_coordinates(nc_cty_centroids),
0,
45,
longlat = TRUE)
# Print summary to screen
nc_cty_dist
## View histogram of NUMBER of neighbors
ggplot() +
aes(card(nc_cty_dist)) +
geom_histogram(bins = 8,
fill = "grey",
col = "grey40")
# First, the polygons
plot(st_geometry(nc_cty),
col = "gray85",
border = "gray75")
# Add the connections to the plot
plot(nc_cty_dist,
st_geometry(nc_cty_centroids),
pch = 16,
col = "red",
lwd = 1,
add = TRUE)  # this overlays new layer on current plot
#pick a county
focal_county_index<-sample(1:100,1)
#get neighbors
neighbors_index<-nc_cty_dist[[focal_county_index]]
#filter the counties to get focal county and neighbors
focal_county<-nc_cty%>%filter(OBJECTID==focal_county_index)
neighbor_counties<-nc_cty%>%filter(OBJECTID%in%neighbors_index)
ggplot()+
geom_sf(data=nc_cty,aes(fill="gray"))+
geom_sf(data=focal_county,aes(fill="black"))+
geom_sf(data=neighbor_counties,aes(fill="red"))
# Print summary to screen
nc_cty_queen_nb
# First, the polygons
plot(st_geometry(nc_cty),
col = "gray85",
border = "gray75")
# Add the connections to the plot
plot(nc_cty_queen_nb,
st_geometry(nc_cty_centroids),
pch = 16,
col = "red",
lwd = 1,
add = TRUE)  # this overlays new layer on current plot
# First, the polygons
plot(st_geometry(nc_cty),
col = "gray85",
border = "gray75")
# Add the connections to the plot
plot(nc_cty_rook_nb,
st_geometry(nc_cty_centroids),
pch = 16,
col = "red",
lwd = 1,
add = TRUE)  # this overlays new layer on current plot
# Print summary to screen
nc_cty_rook_nb
# Print summary to screen
nc_cty_queen_nb
? poly2nb
? poly2nb
# Print summary to screen
nc_cty_dist
View(nc_cty_queen_nb)
View(nc_cty)
View(nc_cty_rook_nb)
View(nc_cty_dist)
# Print summary to screen
nc_cty_queen_nb
# Print summary to screen
nc_cty_dist
# First, the polygons
plot(st_geometry(nc_cty),
col = "gray85",
border = "gray75")
# Add the connections to the plot
plot(nc_cty_queen_nb,
st_geometry(nc_cty_centroids),
pch = 16,
col = "red",
lwd = 1,
add = TRUE)  # this overlays new layer on current plot
# Add the connections to the plot
plot(nc_cty_queen_nb,
st_geometry(nc_cty_centroids),
pch = 20,
col = "red",
lwd = 1,
add = TRUE)  # this overlays new layer on current plot
# First, the polygons
plot(st_geometry(nc_cty),
col = "gray85",
border = "gray75")
# Add the connections to the plot
plot(nc_cty_queen_nb,
st_geometry(nc_cty_centroids),
pch = 30,
col = "red",
lwd = 1,
add = TRUE)  # this overlays new layer on current plot
# Add the connections to the plot
plot(nc_cty_queen_nb,
st_geometry(nc_cty_centroids),
pch = 16,
col = "red",
lwd = 1,
add = TRUE)  # this overlays new layer on current plot
# Add the connections to the plot
plot(nc_cty_queen_nb,
st_geometry(nc_cty_centroids),
pch = 16,
col = "red",
lwd = 3,
add = TRUE)  # this overlays new layer on current plot
# Add the connections to the plot
plot(nc_cty_queen_nb,
st_geometry(nc_cty_centroids),
pch = 16,
col = "red",
lwd = 1,
add = TRUE)  # this overlays new layer on current plot
## View histogram of NUMBER of neighbors
ggplot() +
aes(card(nc_cty_rook_nb)) +
geom_histogram(bins = 8,
fill = "grey",
col = "grey40")
## View histogram of NUMBER of neighbors
ggplot() +
aes(card(nc_cty_queen_nb)) +
geom_histogram(bins = 8,
fill = "grey",
col = "grey40")
## View histogram of NUMBER of neighbors
ggplot() +
aes(card(nc_cty_dist)) +
geom_histogram(bins = 8,
fill = "grey",
col = "grey40")
# Print summary to screen
nc_cty_dist
# Print summary to screen
nc_cty_queen_nb
# Print summary to screen
nc_cty_rook_nb
setwd("C:/Users/Emma/Desktop/Spring2023/GEOG215/Assignments/Assignment5")
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 999)
library(tidyverse)
library(sf)
library(tmap)
library(knitr)
library(kableExtra)
library(here)
# Read NC state-level data
nc.st.dat <- read_csv("Data/NC_State_COVID_POP_2020-09-23.csv")
# Read NC state-level data
nc.st.dat <- read_csv("Data/NC_COVID_2020-09-23_ZIP.csv")
setwd("C:/Users/Emma/Desktop/Spring2023/GEOG215/Assignments/Assignment5")
# Read NC state-level data
nc.st.dat <- read_csv("Data/NC_COVID_2020-09-23_ZIP.csv")
# Read NC state-level data
nc.st.dat <- read_csv("/Data/NC_COVID_2020-09-23_ZIP.csv")
library(here)
##########################
####  Load libraries  ####
##########################
library(sf)
library(tidyverse)
library(rmapshaper)
library(readxl)
setwd("C:/Users/Emma/Desktop/Spring2023/GEOG215/Assignments/Assignment5")
setwd("C:/Users/Emma/Downloads/Assignment4")
setwd("C:/Users/Emma/Downloads/Assignment4")
# Read in North Carolina COVID data
nc.zip.cvd <- read_csv("Data/tabular/new_NC_COVID_2020-09-23_ZIP.csv")
##########################
####  Load libraries  ####
##########################
library(sf)
library(tidyverse)
library(rmapshaper)
library(readxl)
########################
####  Read in data  ####
########################
# Read in North Carolina Zip Code spatial data layer
nc.zip <- st_read("Data/sp/NC_ZIP_2020.shp")
# Read in North Carolina population data
nc.zip.pop <- read_excel("Data/tabular/Population data.xlsx")
# Read in North Carolina COVID data
nc.zip.cvd <- read_csv("Data/tabular/new_NC_COVID_2020-09-23_ZIP.csv")
########################
####  Process data  ####
########################
# Simplify geometry of Zip Code spatial data layer
# for mapping purposes
nc.zip <- ms_simplify(input = as(nc.zip, 'Spatial')) %>%
st_as_sf()
# Make spatial data layer valid (just a good habit using sf objects)
nc.zip <- st_make_valid(nc.zip)
#Isolate columns 1, 4, and 5 in nc.zip
nc.zip <- nc.zip[,-c(1,4,5)]
# Write out spatial data layer
st_write(nc.zip,
"Output/NC_ZIP_2020_mapping.shp",
append = FALSE)
# Set the column names in nc.zip.pop
names(nc.zip.pop) <- c("ZIPCODE", "POP")
## Third step
## Knit your R Markdown file
rmarkdown::render("Code/GEOG215-data-presentation.Rmd",
output_file=here("Output/GEOG215-data-presentation-auto-v2.html"))
## First step
## Read and execute Data Prep Code, GEOG215-data-prep.R
source("Code/GEOG215-data-prep.R")
## Second step
## Read and execute Data Analysis Code, GEOG215-data-analysis
source("Code/GEOG215-data-analysis.R")
## Third step
## Knit your R Markdown file
rmarkdown::render("Code/GEOG215-data-presentation.Rmd",
output_file=here("Output/GEOG215-data-presentation-auto-v2.html"))
########################
###  Load libraries  ###
########################
library(tidyverse)
library(here)
## Third step
## Knit your R Markdown file
rmarkdown::render("Code/GEOG215-data-presentation.Rmd",
output_file=here("Output/GEOG215-data-presentation-auto-v2.html"))
